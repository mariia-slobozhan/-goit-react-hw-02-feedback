{"version":3,"sources":["Components/Statistics/Statistics.module.css","Components/Section/Section.module.css","Components/FeedbackOptions/FeedbackOptions.module.css","Components/FeedbackOptions/FeedbackOptions .js","Components/Statistics/Statistics.js","Components/Section/Section.js","App.js","index.js"],"names":["module","exports","FeedbackOptions","onLeaveFeedback","options","map","option","className","s","button","type","name","onClick","Statistics","good","neutral","bad","total","positivePercentage","container","total_item","item","Section","title","children","section","App","state","e","setState","prevState","target","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Object","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iIACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,WAAa,wD,iBCA/DD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,oBCA7DD,EAAOC,QAAU,CAAC,OAAS,kC,+LCGZ,SAASC,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,gBAAiBC,EAAW,EAAXA,QACzD,OACE,8BACGA,EAAQC,KAAI,SAACC,GAAD,OACX,wBACEC,UAAWC,IAAEC,OACbC,KAAK,SACLC,KAAML,EAENM,QAAST,EALX,SAOGG,GAHIA,Q,oBCRA,SAASO,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,qBAAKX,UAAWC,IAAEW,UAAlB,SACGF,GAAS,EACR,mBAAGV,UAAWC,IAAEY,WAAhB,+BAEA,qCACE,mBAAGb,UAAWC,IAAEa,KAAhB,yBAAgCP,KAChC,mBAAGP,UAAWC,IAAEa,KAAhB,4BAAmCN,KACnC,mBAAGR,UAAWC,IAAEa,KAAhB,wBAA+BL,KAC/B,mBAAGT,UAAWC,IAAEY,WAAhB,0BAAuCH,KACvC,mBAAGV,UAAWC,IAAEY,WAAhB,sCAC0BN,EAAWI,EAAJ,EADjC,a,oBCjBK,SAASI,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,0BAASjB,UAAWC,IAAEiB,QAAtB,UACE,oBAAIlB,UAAWC,IAAEe,MAAjB,SAAyBA,IACxBC,K,ICFDE,E,4MACJC,MAAQ,CACNb,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPb,gBAAkB,SAACyB,GACjB,EAAKC,UAAS,SAACC,GACb,OAAO,eAAGF,EAAEG,OAAOpB,KAAOmB,EAAUF,EAAEG,OAAOpB,MAAQ,O,EAIzDqB,mBAAqB,WAEnB,OADY,EAAKL,MAAMb,KAAO,EAAKa,MAAMZ,QAAU,EAAKY,MAAMX,K,EAIhEiB,gCAAkC,WAChC,IAAMhB,EAAQ,EAAKe,qBACbd,EAAsB,EAAKS,MAAMb,KAAOG,EAAS,IACvD,OAAOiB,KAAKC,MAAMjB,I,4CAGpB,WACE,OACE,qCACE,cAACI,EAAD,CAASC,MAAM,wBAAf,SACE,cAACrB,EAAD,CACEC,gBAAiBiC,KAAKjC,gBACtBC,QAASiC,OAAOC,KAAKF,KAAKT,WAG9B,cAACL,EAAD,CAASC,MAAM,aAAf,SACE,cAACV,EAAD,CACEC,KAAMsB,KAAKT,MAAMb,KACjBC,QAASqB,KAAKT,MAAMZ,QACpBC,IAAKoB,KAAKT,MAAMX,IAChBC,MAAOmB,KAAKJ,qBACZd,mBAAoBkB,KAAKH,6C,GAvCnBM,aA+CHb,IChDfc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.179b6397.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Statistics_item__2skIn\",\"total_item\":\"Statistics_total_item__XUmy4 Statistics_item__2skIn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3jqaO\",\"title\":\"Section_title__3_NiT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__3R2GN\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./FeedbackOptions.module.css\";\n\nexport default function FeedbackOptions({ onLeaveFeedback, options }) {\n  return (\n    <div>\n      {options.map((option) => (\n        <button\n          className={s.button}\n          type=\"button\"\n          name={option}\n          key={option}\n          onClick={onLeaveFeedback}\n        >\n          {option}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  onLeaveFeedback: PropTypes.func,\n  options: PropTypes.array,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Statistics.module.css\";\n\nexport default function Statistics({\n  good,\n  neutral,\n  bad,\n  total,\n  positivePercentage,\n}) {\n  return (\n    <div className={s.container}>\n      {total <= 0 ? (\n        <p className={s.total_item}>No feedback given</p>\n      ) : (\n        <>\n          <p className={s.item}>{`Good: ${good}`}</p>\n          <p className={s.item}>{`Neutral: ${neutral}`}</p>\n          <p className={s.item}>{`Bad: ${bad}`}</p>\n          <p className={s.total_item}>{`Total: ${total}`}</p>\n          <p className={s.total_item}>\n            {`Positive feedback: ${!good ? 0 : positivePercentage} %`}\n          </p>\n        </>\n      )}\n    </div>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n  positivePercentage: PropTypes.number,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Section.module.css\";\n\nexport default function Section({ title, children }) {\n  return (\n    <section className={s.section}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.any,\n};\n","import \"./App.css\";\nimport { Component } from \"react\";\nimport FeedbackOptions from \"./Components/FeedbackOptions/FeedbackOptions \";\nimport Statistics from \"./Components/Statistics/Statistics\";\nimport Section from \"./Components/Section/Section\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onLeaveFeedback = (e) => {\n    this.setState((prevState) => {\n      return { [e.target.name]: prevState[e.target.name] + 1 };\n    });\n  };\n\n  countTotalFeedback = () => {\n    let total = this.state.good + this.state.neutral + this.state.bad;\n    return total;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const total = this.countTotalFeedback();\n    const positivePercentage = (this.state.good / total) * 100;\n    return Math.round(positivePercentage);\n  };\n\n  render() {\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            onLeaveFeedback={this.onLeaveFeedback}\n            options={Object.keys(this.state)}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          <Statistics\n            good={this.state.good}\n            neutral={this.state.neutral}\n            bad={this.state.bad}\n            total={this.countTotalFeedback()}\n            positivePercentage={this.countPositiveFeedbackPercentage()}\n          />\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}